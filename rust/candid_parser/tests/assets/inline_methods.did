type Fn = func(nat) -> (nat) query;
type Gn = Fn;
type RInline = record {
    fn : func(nat) -> (nat) query;
    x : nat
};
type R = record {
    fn : Fn;
    gn : Gn;
    nested : record {
        fn : Gn
    };
    x : nat
};

service : {
    add_two : (nat) -> (nat);

    high_order_fn : (nat, Fn) -> (nat);
    high_order_fn_via_id : (nat, Gn) -> (Fn);
    high_order_fn_inline : (nat, func(nat) -> (nat) query) -> (nat);
    high_order_fn_via_record : (R) -> (nat);
    high_order_fn_via_record_inline : (RInline) -> (nat);

    fn : Fn
}
